{"ast":null,"code":"const items = [];\nexport default (async (req, res) => {\n  await new Promise(r => setTimeout(r, 1000));\n\n  if (req.method === 'POST') {\n    const {\n      text\n    } = req.body; // sometimes it will fail, this will cause a regression on the UI\n\n    if (Math.random() > 0.7) {\n      res.status(500);\n      res.json({\n        message: 'Could not add item!'\n      });\n      return;\n    }\n\n    const newTodo = {\n      id: Math.random().toString(),\n      text: text.toUpperCase()\n    };\n    items.push(newTodo);\n    res.json(newTodo);\n    return;\n  } else {\n    res.json({\n      ts: Date.now(),\n      items\n    });\n  }\n});","map":{"version":3,"sources":["/Users/carsonbrown/git/react-query/examples/optimistic-updates-typescript/pages/api/data.js"],"names":["items","req","res","Promise","r","setTimeout","method","text","body","Math","random","status","json","message","newTodo","id","toString","toUpperCase","push","ts","Date","now"],"mappings":"AAAA,MAAMA,KAAK,GAAG,EAAd;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM,IAAIC,OAAJ,CAAYC,CAAC,IAAIC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA3B,CAAN;;AAEA,MAAIH,GAAG,CAACK,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAWN,GAAG,CAACO,IAArB,CADyB,CAGzB;;AAEA,QAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,MAAAA,GAAG,CAACU,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AACA;AACD;;AAED,UAAMC,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAEN,IAAI,CAACC,MAAL,GAAcM,QAAd,EAAN;AAAgCT,MAAAA,IAAI,EAAEA,IAAI,CAACU,WAAL;AAAtC,KAAhB;AACAjB,IAAAA,KAAK,CAACkB,IAAN,CAAWJ,OAAX;AACAZ,IAAAA,GAAG,CAACU,IAAJ,CAASE,OAAT;AACA;AACD,GAfD,MAeO;AACLZ,IAAAA,GAAG,CAACU,IAAJ,CAAS;AACPO,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADG;AAEPrB,MAAAA;AAFO,KAAT;AAID;AACF,CAxBD","sourcesContent":["const items = []\n\nexport default async (req, res) => {\n  await new Promise(r => setTimeout(r, 1000))\n\n  if (req.method === 'POST') {\n    const { text } = req.body\n\n    // sometimes it will fail, this will cause a regression on the UI\n\n    if (Math.random() > 0.7) {\n      res.status(500)\n      res.json({ message: 'Could not add item!' })\n      return\n    }\n\n    const newTodo = { id: Math.random().toString(), text: text.toUpperCase() }\n    items.push(newTodo)\n    res.json(newTodo)\n    return\n  } else {\n    res.json({\n      ts: Date.now(),\n      items,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}